# Sample workflow to access AWS resources when workflow is tied to branch
# The workflow Creates static website using aws s3
name: AWS example workflow
on:
  push
env:
  AWS_ACCOUNT_ID: "932207385252"
  AWS_REGION : "us-east-1"
  AWS_LAMBDA_FUNCTION_NAME: "lambda_function_name"
# permission can be added at job level or workflow level    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  upload-lambda-code:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionsLambdaFullAccess
          role-session-name: lambdaaccess
          aws-region: ${{ env.AWS_REGION }}
      - name: create packaged environment
        run:
          python -m pip install -r requirements.txt -t app/
      - name: create zip
        working-directory: app
        run: |
          zip -r lambda.zip .
          cp lambda.zip ../
      - name: upload lambda code
        run: |
          aws lambda update-function-code --function-name ${{ env.AWS_LAMBDA_FUNCTION_NAME }} --zip-file fileb://lambda.zip
          
      # Upload a file to AWS s3
